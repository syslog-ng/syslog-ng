name: Compile dbld-images


on:
  pull_request:
    paths:
      - 'dbld/**'
      - 'packaging/rhel/**'
      - 'packaging/debian/**'
      - '.github/workflows/dbld-images.yml'

  push:
    paths:
      - 'dbld/**'
      - 'packaging/rhel/**'
      - 'packaging/debian/**'
      - '.github/workflows/dbld-images.yml'

  schedule:
    - cron: '00 22 * * *'

  workflow_dispatch:
    inputs:
      testing_image_upload:
        description: Should we upload the images into GitHub Packages? (true/false)
        required: false
        default: "false"

jobs:
  build:
    runs-on: ${{ matrix.platform }}

    strategy:
      matrix:
        image:
          # dbld docker images only
          - almalinux-8
          - almalinux-9
          - centos-stream9
          - centos-stream10
          - fedora-latest
          - fedora-rawhide
          - opensuse-tumbleweed
          - ubuntu-focal
          - devshell
          - kira
          - tarball
          # dbld docker image + binary packages
          - debian-bullseye
          - debian-sid
          - debian-testing
          - ubuntu-jammy
          - ubuntu-noble
          - ubuntu-plucky
          - rocky-9
          - rhel-8
          - rhel-9
          # dbld docker image + binary packages + docker binary
          - debian-bookworm
        arch:
          - amd64
        # this is the build platform we use to build the images
        # FIXME: temporary because sudo doesn't work in RedHat and descendants on an ubuntu-24.04 hosts (ubuntu-latest)
        # workaround can be to add --privileged to DOCKER_SHELL in dbld/rules
        platform:
          - ubuntu-22.04
          - ubuntu-22.04-arm
        exclude:
          # we need only arm builder for the outputs bellow
          - platform: ubuntu-22.04-arm
        include:
          # arm64 docker images with binary syslog-ng installation
          - image: debian-bookworm
            platform: ubuntu-22.04-arm
            arch: arm64
          - image: ubuntu-noble
            platform: ubuntu-22.04-arm
            arch: arm64
          - image: ubuntu-plucky
            platform: ubuntu-22.04-arm
            arch: arm64
          - image: rhel-8
            platform: ubuntu-22.04-arm
            arch: arm64
          - image: rhel-9
            platform: ubuntu-22.04-arm
            arch: arm64
          # devshell docker image for arm64 (devshell is bookworm based)
          - image: devshell
            platform: ubuntu-22.04-arm
            arch: arm64
      fail-fast: false

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Set container ENV
        run: |
          CONTAINER_REGISTRY="ghcr.io/${{ github.repository_owner }}"
          CONTAINER_REGISTRY="$(echo "$CONTAINER_REGISTRY" | tr '[:upper:]' '[:lower:]')"
          CONTAINER_ARCH=${{ matrix.arch }}
          CONTAINER_NAME_SUFFIX="$([ ${{ matrix.arch }} = amd64 ] && echo '' || echo '-arm64')"

          . .github/workflows/gh-tools.sh
          gh_export CONTAINER_REGISTRY CONTAINER_ARCH CONTAINER_NAME_SUFFIX

      - name: Build the images
        run: dbld/rules image-${{ matrix.image }}${CONTAINER_NAME_SUFFIX} JENKINS_URL=${RUNNER_ENVIRONMENT}

      - name: Should we upload the images?
        run: |
          # Use the develop for the published dbld images/packages
          if [ "${{ github.event.inputs.testing_image_upload }}" = "true" ] || \
             ( \
              [ "${{ github.repository_owner }}" = "syslog-ng" ] && \
              [ "${{ github.ref }}" = "refs/heads/develop" ] && \
              [[ "${{ github.event_name }}" =~ ^(push|workflow_dispatch|schedule)$ ]] \
            )
          then
            UPLOAD_IMAGES_INTERNAL="true"
          else
            UPLOAD_IMAGES_INTERNAL="false"
          fi

          . .github/workflows/gh-tools.sh
          gh_export UPLOAD_IMAGES_INTERNAL

      - name: Log in to the Container registry
        if: env.UPLOAD_IMAGES_INTERNAL == 'true'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push the images
        if: env.UPLOAD_IMAGES_INTERNAL == 'true'
        run: |
          dbld/rules push-image-${{ matrix.image }}${CONTAINER_NAME_SUFFIX}

      # FIXME: this one is soemthong not final, exists in public peview, so the gh api command might have changed
      #        the rights set to internal currently manually from the UI
      # - name: Hide the internal images
      #   if: env.UPLOAD_IMAGES_INTERNAL == 'true' && startsWith(matrix.image, 'rhel-')
      #   env:
      #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #     gh api \
      #           --method PATCH \
      #           "/orgs/syslog-ng/packages/container/dbld-${{ matrix.image }}${CONTAINER_NAME_SUFFIX}/visibility" \
      #           -f visibility=internal
