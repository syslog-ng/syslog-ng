/*
 * Copyright (c) 2023 Attila Szakacs
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 as published
 * by the Free Software Foundation, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 *
 * As an additional exemption you are allowed to compile & link against the
 * OpenSSL libraries as published by the OpenSSL project. See the file
 * COPYING for details.
 *
 */

%code top {
#include "cloud-auth-parser.h"
}

%code {
#include "cfg-grammar-internal.h"
#include "plugin.h"
#include "cloud-auth.h"
#include "google-auth.h"
#include "azure-auth.h"

LogDriverPlugin *last_plugin;
CloudAuthenticator *last_authenticator;
}

%define api.prefix {cloud_auth_}

/* this parameter is needed in order to instruct bison to use a complete
 * argument list for yylex/yyerror */

%lex-param {CfgLexer *lexer}
%parse-param {CfgLexer *lexer}
%parse-param {LogDriverPlugin **instance}
%parse-param {gpointer arg}

/* INCLUDE_DECLS */

%token KW_CLOUD_AUTH
%token KW_GCP
%token KW_SERVICE_ACCOUNT
%token KW_KEY
%token KW_AUDIENCE
%token KW_TOKEN_VALIDITY_DURATION
%token KW_USER_MANAGED_SERVICE_ACCOUNT
%token KW_NAME
%token KW_METADATA_URL
%token KW_AZURE
%token KW_MONITOR
%token KW_TENANT_ID
%token KW_APP_ID
%token KW_APP_SECRET
%token KW_SCOPE

%%

start
  : LL_CONTEXT_INNER_DEST inner_destination_cloud_auth { YYACCEPT; }
  ;

inner_destination_cloud_auth
  : KW_CLOUD_AUTH
    {
      last_plugin = cloud_auth_dest_plugin_new();
      *instance = (LogDriverPlugin *) last_plugin;
    }
    '(' inner_destination_cloud_auth_option ')'
  ;

inner_destination_cloud_auth_option
  : KW_GCP
    {
      last_authenticator = google_authenticator_new();
    }
    '(' google_dest_auth_options ')'
    {
      cloud_auth_dest_plugin_set_authenticator(last_plugin, last_authenticator);
    }
  | KW_AZURE
    {
      last_authenticator = azure_authenticator_new();
    }
    '(' azure_dest_auth_options ')'
    {
      cloud_auth_dest_plugin_set_authenticator(last_plugin, last_authenticator);
    }
  ;

google_dest_auth_options
  : google_dest_auth_option google_dest_auth_options
  |
  ;

google_dest_auth_option
  : KW_SERVICE_ACCOUNT
    {
      google_authenticator_set_auth_mode(last_authenticator, GAAM_SERVICE_ACCOUNT);
    }
    '(' google_dest_auth_service_account_options ')'
  | KW_USER_MANAGED_SERVICE_ACCOUNT
    {
      google_authenticator_set_auth_mode(last_authenticator, GAAM_USER_MANAGED_SERVICE_ACCOUNT);
    }
    '(' google_dest_auth_user_managed_service_account_options ')'
  ;

google_dest_auth_service_account_options
  : google_dest_auth_service_account_option google_dest_auth_service_account_options
  |
  ;

google_dest_auth_service_account_option
  : KW_KEY '(' path_secret ')' { google_authenticator_set_service_account_key_path(last_authenticator, $3); free($3); }
  | KW_AUDIENCE '(' string ')' { google_authenticator_set_service_account_audience(last_authenticator, $3); free($3); }
  | KW_TOKEN_VALIDITY_DURATION '(' nonnegative_integer64 ')' { google_authenticator_set_service_account_token_validity_duration(last_authenticator, $3); }
  ;

google_dest_auth_user_managed_service_account_options
  : google_dest_auth_user_managed_service_account_option google_dest_auth_user_managed_service_account_options
  |
  ;

google_dest_auth_user_managed_service_account_option
  : KW_NAME '(' string ')' { google_authenticator_set_user_managed_service_account_name(last_authenticator, $3); free($3); }
  | KW_METADATA_URL '(' string ')' { google_authenticator_set_user_managed_service_account_metadata_url(last_authenticator, $3); free($3); }
  ;

azure_dest_auth_options
  : azure_dest_auth_option azure_dest_auth_options
  |
  ;

azure_dest_auth_option
  : KW_MONITOR
    {
      azure_authenticator_set_auth_mode(last_authenticator, AAAM_MONITOR);
    }
    '(' azure_dest_monitor_options ')'
  ;

azure_dest_monitor_options
  : azure_dest_monitor_option azure_dest_monitor_options
  |
  ;

azure_dest_monitor_option
  : KW_TENANT_ID '(' string ')' {azure_authenticator_set_tenant_id(last_authenticator, $3); free($3);}
  | KW_APP_ID '(' string ')' {azure_authenticator_set_app_id(last_authenticator, $3); free($3);}
  | KW_APP_SECRET '(' string ')' {azure_authenticator_set_app_secret(last_authenticator, $3); free($3);}
  | KW_SCOPE '(' string ')' {azure_authenticator_set_scope(last_authenticator, $3); free($3);}
  ;

/* INCLUDE_RULES */

%%
