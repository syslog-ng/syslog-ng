/*
 * Copyright (c) 2023 Attila Szakacs
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 as published
 * by the Free Software Foundation, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 *
 * As an additional exemption you are allowed to compile & link against the
 * OpenSSL libraries as published by the OpenSSL project. See the file
 * COPYING for details.
 *
 */

%code top {

#include "metrics-probe-parser.h"

}


%code {

#include "metrics-probe.h"
#include "cfg-parser.h"
#include "cfg-grammar-internal.h"

}

%define api.prefix {metrics_probe_}

/* this parameter is needed in order to instruct bison to use a complete
 * argument list for yylex/yyerror */

%lex-param {CfgLexer *lexer}
%parse-param {CfgLexer *lexer}
%parse-param {LogParser **instance}
%parse-param {gpointer arg}

/* INCLUDE_DECLS */

%token KW_METRICS_PROBE
%token KW_INCREMENT

%type	<ptr> parser_expr_metrics_probe

%%

start
        : LL_CONTEXT_PARSER parser_expr_metrics_probe { YYACCEPT; }
        ;

parser_expr_metrics_probe
        : KW_METRICS_PROBE '('
          {
            last_parser = *instance = metrics_probe_new(configuration);
          }
          metrics_probe_opts
          ')' { $$ = last_parser; }
        ;

metrics_probe_opts
        : metrics_probe_opt metrics_probe_opts
        |
        ;

	;

metrics_probe_opt
        : KW_INCREMENT '(' template_content ')' { metrics_probe_set_increment_template(last_parser, $3); log_template_unref($3); }
        | { last_template_options = metrics_probe_get_template_options(last_parser); } template_option
        | parser_opt
	| { last_dyn_metrics_template = metrics_probe_get_metrics_template(last_parser); } dyn_metrics_template_opt
        ;

/* INCLUDE_RULES */

%%
