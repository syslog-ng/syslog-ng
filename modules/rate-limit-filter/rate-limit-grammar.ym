/*
 * Copyright (c) 2021 One Identity
 *
 * This program is free software; you can redistribute it and/or modify it
 * under the terms of the GNU General Public License version 2 as published
 * by the Free Software Foundation, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 *
 * As an additional exemption you are allowed to compile & link against the
 * OpenSSL libraries as published by the OpenSSL project. See the file
 * COPYING for details.
 *
 */

%code top {
#include "rate-limit-parser.h"

}


%code {

#include "rate-limit.h"
#include "cfg-grammar-internal.h"
#include "cfg-parser.h"
#include "syslog-names.h"
#include "messages.h"
#include "plugin.h"

#include <string.h>

}

%define api.prefix {rate_limit_filter_}

/* this parameter is needed in order to instruct bison to use a complete
 * argument list for yylex/yyerror */

%lex-param {CfgLexer *lexer}
%parse-param {CfgLexer *lexer}
%parse-param {FilterExprNode **instance}
%parse-param {gpointer arg}

/* INCLUDE_DECLS */

%token KW_RATE_LIMIT
%token KW_RATE

%type	<ptr> rate_limit

%%

start
  : LL_CONTEXT_FILTER rate_limit          { YYACCEPT; }
  ;

rate_limit
  : KW_RATE_LIMIT <ptr>{ $$ = last_filter_expr = *instance = rate_limit_new(); } '(' rate_limit_args ')' { $$ = $2; }
  | KW_THROTTLE <ptr>{ $$ = last_filter_expr = *instance = rate_limit_new(); } '(' rate_limit_args ')' { $$ = $2; }
  ;

rate_limit_args
  : rate_limit_arg rate_limit_args
  |
  ;

rate_limit_arg
  : KW_TEMPLATE '(' template_content ')'
      {
        rate_limit_set_key_template(last_filter_expr, $3);
        log_template_unref($3);
      }
  | KW_RATE '(' positive_integer ')'
      {
        rate_limit_set_rate(last_filter_expr, $3);
      }
  ;

/* INCLUDE_RULES */

%%
